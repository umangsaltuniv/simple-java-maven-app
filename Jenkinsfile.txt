pipeline {
    agent {
        docker {
            image 'maven:3-alpine'
            args '-v /root/.m2:/root/.m2 -p 9191:8089'
        }
    }
    stages {
	
        stage('Clean') {
            steps {
                sh 'mvn clean'
            }
        }
	
		stage('Static Code Analysis') {
            steps {
			 script {
          scannerHome = tool 'sonar-scanner'
        }
				withSonarQubeEnv('My SonarQube Server')
				{
				sh "${scannerHome}/bin/sonar-scanner"
				}
			}
		}
		
		/*	
		stage('PMD') {
            steps {
                sh 'mvn site'
            }
        }
		*/
		
        stage('UnitTest') {
            steps {
                sh 'mvn test'
            }	
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
		
		stage('Jacoco Code Coverage') {
			steps {
				step([$class: 'JacocoPub', 
				execPattern: 'target/*.exec',
				classPattern: 'target/classes',
				sourcePattern: 'src/main/java',
				exclusionPattern: 'src/test*'
					])
				}
		}	
		
		/*
		stage('Jacoco') {
            steps {
                sh 'mvn jacoco:report'
            }
        }
		*/
		
		stage('Build') {
            steps {
                sh 'mvn install'
            }
        }
		
		
		stage('Artifactory') {
            steps {
                step([
				def server = Artifactory.server 'ART'
				server.publishBuildInfo buildInfo
				])
			}
        }
		
		
      
	  stage('War deploy on Tomcat server') {
            steps {
				sh './jenkins/scripts/deliver.sh'
            }
        }
	
	
	
		/*
		 stage('War moved from Dev server and deploy on Test server') {
            steps {
               
            }
        }
		*/
		
		/*
		stage('System Test on Test server') {
            steps {
                sh 'mvn -Dtest=SystemTest1_Title.java'
            }
        }
		*/
		
		/*
		 stage('War moved from Test server and deploy on Staging server') {
            steps {
               
            }
        }
		*/
		
		/*
		stage('Smoke Test on Staging server') {
            steps {
                
            }
        }
		*/
		
		/*
		 stage('War moved from Stage server and deploy on Prod server') {
            steps {
               
            }
        }
		*/
		
		/*
		stage('Smoke Test on Prod server') {
            steps {
            
            }
        }
		*/
		
    }
}