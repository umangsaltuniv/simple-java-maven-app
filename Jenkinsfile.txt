pipeline {
    agent {
        docker {
            image 'maven:3-alpine'
            args '-v /root/.m2:/root/.m2'
        }
    }
    stages {
	
		stage('Static Code Analysis') {
            steps {
			 script {
          scannerHome = tool 'sonar-scanner'
        }
				withSonarQubeEnv('My SonarQube Server')
				{
				sh "${scannerHome}/bin/sonar-scanner"
				}
			}
		}
		
		stage('Build') {
			steps {
				sh './jenkins_build.sh'
        junit '*/build/test-results/*.xml'
        step( [ $class: 'JacocoPublisher' ] )
					
				}
		}
		
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('UnitTest') {
            steps {
                sh 'mvn test'
            }	
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
		stage('SystemTest') {
            steps {
				sh 'mvn -Dtest=ITHtmlUnitBrowser test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
		
    }
}